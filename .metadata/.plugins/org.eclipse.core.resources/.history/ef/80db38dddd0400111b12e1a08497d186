package examples;

import util.models.AListenableVector;
import util.models.ListenableVector;
import bus.uigen.ObjectEditor;
import bus.uigen.shapes.ATextModel;
import collection.visualizers.ACollectionVisualizer;
import collection.visualizers.ALinearVisualizer;

public class GraphExample {
	
	public static void main(String[] args) {
		ListenableVector<Integer> node1 = new AListenableVector<Integer>();
		ListenableVector<Integer> node2 = new AListenableVector<Integer>();
		ListenableVector<Integer> node3 = new AListenableVector<Integer>();
		ListenableVector<Integer> node4 = new AListenableVector<Integer>();
		
		
		node1.add(1);
		node1.add(2);
		node1.add(3);
		node1.add(4);
		
		node2.add(1);
		node2.add(2);
		node2.add(3);
		node2.add(4);
		
		node3.add(1);
		node3.add(2);
		node3.add(3);
		node3.add(4);
		
		node4.add(1);
		node4.add(2);
		node4.add(3);
		node4.add(4);

		ACollectionVisualizer visualizer = new ALinearVisualizer(
				new ATextModel("", 0, 0, 80, 20));
		visualizer.setDynamicHeight(false);
		visualizer.setDynamicWidth(true);
		visualizer.visualize(vector);
		ObjectEditor.edit(visualizer);
		ObjectEditor.edit(visualizer.getController());
	}
}
